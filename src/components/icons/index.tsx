import { forwardRef } from "react";
import type * as React from "react";
import { css as configCSS, CSS } from "stitches.config";

interface IconProps extends React.SVGAttributes<SVGElement> {
  children?: never;
  color?: string;
  css?: CSS;
}

export const GlouseLogo = forwardRef<SVGSVGElement, IconProps>(
  function GlouseLogoBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="135"
        height="32"
        viewBox="0 0 135 32"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={configCSS(css)()}
        ref={forwardedRef}
        {...props}
      >
        <path
          d="M28.8244 14.5377H17.089C16.8373 14.5377 16.596 14.6376 16.4181 14.8155C16.2402 14.9934 16.1403 15.2347 16.1403 15.4864V18.4985C16.1403 18.7501 16.2402 18.9914 16.4181 19.1693C16.596 19.3472 16.8373 19.4472 17.089 19.4472H22.4254C22.5723 19.4479 22.717 19.4827 22.8481 19.5489C22.9792 19.6151 23.0932 19.7108 23.181 19.8285C23.2689 19.9463 23.3282 20.0828 23.3543 20.2273C23.3804 20.3719 23.3725 20.5205 23.3314 20.6615C22.9213 22.0835 22.0823 23.3441 20.9288 24.2713C19.52 25.3781 17.6313 25.9315 15.2627 25.9315C12.6569 25.9315 10.4741 25.0382 8.71431 23.2515C6.95447 21.4647 6.07534 19.1001 6.07692 16.1576C6.07692 13.2972 6.94657 10.9674 8.68585 9.16801C10.4251 7.36864 12.6522 6.46817 15.3671 6.46659C17.9823 6.46659 20.1446 7.2801 21.8538 8.90712C22.0331 9.07146 22.2688 9.16063 22.512 9.15621C22.7552 9.1518 22.9874 9.05414 23.1606 8.8834L26.0233 6.07762C26.1126 5.98939 26.1835 5.88431 26.2319 5.76849C26.2803 5.65266 26.3052 5.52838 26.3052 5.40286C26.3052 5.27734 26.2803 5.15306 26.2319 5.03723C26.1835 4.92141 26.1126 4.81633 26.0233 4.7281C24.8082 3.59325 23.3938 2.69268 21.8514 2.07174C19.844 1.2668 17.6981 0.863887 15.5355 0.885863C13.4033 0.870969 11.2878 1.26299 9.3025 2.0409C7.46576 2.74773 5.78976 3.8164 4.37401 5.18347C2.98358 6.56117 1.89201 8.21064 1.1674 10.029C0.380363 11.9756 -0.0161285 14.0579 0.000502307 16.1576C-0.0106395 17.9289 0.262418 19.6906 0.809269 21.3754C1.29966 22.9229 2.06536 24.3691 3.06955 25.6446C4.03281 26.8473 5.17037 27.8993 6.44455 28.7658C7.73465 29.6462 9.15758 30.314 10.6591 30.7438C12.1964 31.1865 13.7887 31.4093 15.3884 31.4055C17.9836 31.4455 20.5411 30.7808 22.7883 29.482C24.9733 28.2015 26.7517 26.3294 27.9184 24.0816C29.1501 21.762 29.7668 19.1381 29.7683 16.2097V15.4982C29.7699 15.373 29.7467 15.2488 29.7 15.1326C29.6533 15.0164 29.5841 14.9107 29.4964 14.8214C29.4086 14.7321 29.3041 14.661 29.1887 14.6124C29.0734 14.5637 28.9496 14.5383 28.8244 14.5377Z"
          fill="#3190CE"
        />
        <path
          d="M39.7113 0.601318H36.1134C35.5921 0.601318 35.1694 1.02394 35.1694 1.54527V29.928C35.1694 30.4493 35.5921 30.872 36.1134 30.872H39.7113C40.2327 30.872 40.6553 30.4493 40.6553 29.928V1.54527C40.6553 1.02394 40.2327 0.601318 39.7113 0.601318Z"
          fill="#3190CE"
        />
        <path
          d="M87.159 10.5035H83.58C83.3284 10.5035 83.0871 10.6034 82.9092 10.7813C82.7313 10.9592 82.6313 11.2005 82.6313 11.4522V21.71C82.6313 23.2658 82.2534 24.4185 81.4976 25.168C80.7418 25.9175 79.7322 26.2922 78.4689 26.2922C77.2039 26.2922 76.1952 25.9175 75.4425 25.168C74.6899 24.4185 74.3128 23.2658 74.3112 21.71V11.445C74.3112 11.1934 74.2113 10.9521 74.0333 10.7742C73.8554 10.5963 73.6141 10.4963 73.3625 10.4963H69.7693C69.5177 10.4963 69.2764 10.5963 69.0985 10.7742C68.9206 10.9521 68.8206 11.1934 68.8206 11.445V22.1843C68.8066 23.3431 68.9804 24.4965 69.3353 25.5996C69.6353 26.5507 70.1134 27.436 70.7441 28.2086C71.3448 28.9204 72.0627 29.5244 72.8668 29.9945C73.6883 30.4794 74.5782 30.8376 75.5066 31.057C76.4775 31.2846 77.4717 31.3976 78.4689 31.3938C79.7091 31.4036 80.9432 31.2187 82.1261 30.8459C83.2377 30.4961 84.275 29.9437 85.1857 29.2166C86.1263 28.4461 86.86 27.4532 87.3203 26.3278C87.8604 25.0143 88.1267 23.6043 88.1029 22.1843V11.445C88.1011 11.1955 88.0009 10.9567 87.8242 10.7805C87.6476 10.6042 87.4085 10.5047 87.159 10.5035Z"
          fill="#3190CE"
        />
        <path
          d="M104.33 18.3894L102.523 18.1167C101.668 18.0146 100.829 17.814 100.02 17.519C99.7792 17.4404 99.5695 17.2864 99.4223 17.0798C99.275 16.8732 99.1979 16.6248 99.2022 16.3711C99.1994 16.0942 99.2721 15.8218 99.4125 15.5832C99.5529 15.3446 99.7557 15.1488 99.9991 15.0168C100.534 14.6863 101.312 14.5219 102.333 14.5235C103.471 14.5464 104.601 14.7154 105.696 15.0263C106.472 15.2362 107.234 15.4945 107.978 15.7995C108.207 15.8943 108.464 15.8958 108.694 15.8036C108.924 15.7114 109.109 15.5329 109.209 15.3062L110.312 12.7636C110.362 12.6488 110.388 12.5252 110.391 12.3999C110.393 12.2746 110.37 12.1501 110.323 12.0337C110.277 11.9173 110.208 11.8112 110.121 11.7215C110.033 11.6318 109.929 11.5604 109.813 11.5114C107.395 10.4787 104.79 9.95479 102.16 9.97209C99.4718 9.97209 97.3665 10.5611 95.8438 11.739C94.3212 12.917 93.5622 14.5512 93.567 16.6415C93.567 20.12 95.9142 22.1803 100.609 22.8222L102.269 23.0594C103.46 23.2286 104.321 23.4594 104.854 23.752C105.385 24.0484 105.653 24.4398 105.653 24.9378C105.653 26.2138 104.399 26.851 101.889 26.8495C99.7641 26.8835 97.6656 26.3724 95.794 25.3647C95.6836 25.3021 95.5617 25.2623 95.4356 25.2476C95.3095 25.2329 95.1817 25.2437 95.0599 25.2793C94.938 25.3149 94.8245 25.3746 94.7261 25.4549C94.6278 25.5352 94.5465 25.6344 94.4872 25.7466L93.1827 28.2535C93.0736 28.4657 93.0484 28.7111 93.1121 28.941C93.1759 29.1709 93.3239 29.3683 93.5266 29.494C95.6881 30.7715 98.4615 31.4111 101.847 31.4127C104.775 31.4127 107.068 30.7889 108.725 29.5414C110.382 28.2939 111.208 26.6123 111.203 24.4967C111.203 21.1241 108.912 19.0883 104.33 18.3894Z"
          fill="#3190CE"
        />
        <path
          d="M132.236 12.92C130.412 10.9451 128.033 9.9569 125.1 9.95532C122.045 9.95532 119.564 10.9507 117.657 12.9414C115.75 14.932 114.796 17.5315 114.794 20.7397C114.794 23.9336 115.772 26.5086 117.728 28.4645C119.684 30.4204 122.231 31.3983 125.368 31.3983C128.522 31.3983 131.16 30.5832 133.282 28.953C133.382 28.8719 133.464 28.7714 133.524 28.6575C133.584 28.5436 133.62 28.4187 133.63 28.2905C133.64 28.1623 133.623 28.0334 133.582 27.9116C133.541 27.7898 133.475 27.6778 133.389 27.5822L131.43 25.4286C131.277 25.256 131.067 25.1449 130.838 25.1161C130.609 25.0873 130.378 25.1427 130.187 25.2721C129.624 25.6612 129.016 25.9798 128.375 26.2208C127.516 26.5543 126.604 26.7287 125.683 26.7354C124.325 26.7354 123.183 26.3852 122.256 25.6848C121.619 25.1921 121.128 24.5365 120.833 23.7874C120.779 23.6444 120.761 23.4906 120.779 23.339C120.797 23.1873 120.852 23.0423 120.938 22.9164C121.025 22.7904 121.14 22.6871 121.275 22.6154C121.41 22.5436 121.56 22.5055 121.713 22.5042H134.029C134.271 22.5048 134.503 22.4133 134.679 22.2485C134.856 22.0837 134.962 21.858 134.978 21.6172C134.995 21.3184 135.004 20.9982 135.004 20.6543C134.988 17.473 134.066 14.8949 132.236 12.92ZM128.242 18.764H121.732C121.578 18.7631 121.426 18.7247 121.29 18.6521C121.155 18.5796 121.039 18.475 120.952 18.3475C120.866 18.22 120.812 18.0734 120.795 17.9204C120.778 17.7673 120.798 17.6124 120.854 17.469C121.109 16.8203 121.503 16.2356 122.009 15.7566C122.781 15.0435 123.797 14.6862 125.057 14.6846C126.129 14.646 127.174 15.0272 127.969 15.7471C128.478 16.2295 128.871 16.8195 129.122 17.4738C129.177 17.6171 129.197 17.7717 129.18 17.9243C129.162 18.0769 129.107 18.2229 129.021 18.3498C128.934 18.4768 128.818 18.5808 128.683 18.6529C128.547 18.725 128.396 18.7632 128.242 18.764Z"
          fill="#3190CE"
        />
        <path
          d="M63.4816 14.4595C63.2368 14.064 62.9617 13.6882 62.6586 13.3353C61.1993 11.5938 59.2269 10.3581 57.0232 9.80476C54.8195 9.25138 52.4973 9.40862 50.3883 10.254C48.2794 11.0994 46.4916 12.5897 45.2803 14.512C44.069 16.4343 43.4963 18.6903 43.6439 20.9576C43.7915 23.2249 44.6519 25.3875 46.1021 27.1365C47.5524 28.8856 49.5184 30.1315 51.7191 30.6964C53.9199 31.2612 56.2429 31.116 58.3562 30.2816C60.4695 29.4472 62.2651 27.9662 63.4864 26.0502C63.6334 25.8273 63.7686 25.5925 63.8967 25.3601C64.7037 23.8511 65.1405 22.172 65.171 20.461C65.2015 18.7501 64.8249 17.0564 64.0722 15.5197C63.8979 15.1542 63.7006 14.8001 63.4816 14.4595ZM54.1156 26.3538C53.196 26.3542 52.29 26.1318 51.4751 25.7057C50.6603 25.2795 49.9608 24.6622 49.4365 23.9067C48.9123 23.1512 48.5789 22.2799 48.4648 21.3674C48.3508 20.4549 48.4596 19.5284 48.7818 18.6671C49.104 17.8058 49.6301 17.0354 50.315 16.4219C51 15.8083 51.8234 15.3698 52.7148 15.1439C53.6062 14.918 54.5391 14.9114 55.4336 15.1247C56.3281 15.338 57.1576 15.7649 57.8511 16.3688C56.8469 17.5455 56.3152 19.053 56.3591 20.5994C56.4029 22.1457 57.0191 23.6207 58.0883 24.7387C57.0265 25.7763 55.6002 26.3562 54.1156 26.3538Z"
          fill="#3190CE"
        />
        <path
          d="M65.0375 8.32165C65.4335 7.36562 64.9795 6.26957 64.0235 5.87357C63.0675 5.47757 61.9714 5.93156 61.5754 6.8876C61.1794 7.84363 61.6334 8.93968 62.5895 9.33568C63.5455 9.73168 64.6415 9.27769 65.0375 8.32165Z"
          fill="#3190CE"
        />
      </svg>
    );
  }
);

export const CallIcon = forwardRef<SVGSVGElement, IconProps>(
  function CallIconBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="30"
        height="30"
        viewBox="0 0 30 30"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={configCSS(css)()}
        ref={forwardedRef}
        {...props}
      >
        <path
          d="M23.812 6.13757C22.666 4.97998 21.301 4.06216 19.7966 3.43764C18.2921 2.81312 16.6784 2.4944 15.0495 2.50007C8.22451 2.50007 2.66201 8.06257 2.66201 14.8876C2.66201 17.0751 3.23701 19.2001 4.31201 21.0751L2.56201 27.5001L9.12451 25.7751C10.937 26.7626 12.9745 27.2876 15.0495 27.2876C21.8745 27.2876 27.437 21.7251 27.437 14.9001C27.437 11.5876 26.1495 8.47507 23.812 6.13757ZM15.0495 25.1876C13.1995 25.1876 11.387 24.6876 9.79951 23.7501L9.42451 23.5251L5.52451 24.5501L6.56201 20.7501L6.31201 20.3626C5.28419 18.7213 4.73844 16.8241 4.73701 14.8876C4.73701 9.21257 9.36201 4.58757 15.037 4.58757C17.787 4.58757 20.3745 5.66257 22.312 7.61257C23.2714 8.56753 24.0316 9.7034 24.5488 10.9544C25.0659 12.2053 25.3296 13.5465 25.3245 14.9001C25.3495 20.5751 20.7245 25.1876 15.0495 25.1876ZM20.6995 17.4876C20.387 17.3376 18.862 16.5876 18.587 16.4751C18.2995 16.3751 18.0995 16.3251 17.887 16.6251C17.6745 16.9376 17.087 17.6376 16.912 17.8376C16.737 18.0501 16.5495 18.0751 16.237 17.9126C15.9245 17.7626 14.9245 17.4251 13.7495 16.3751C12.8245 15.5501 12.212 14.5376 12.0245 14.2251C11.8495 13.9126 11.9995 13.7501 12.162 13.5876C12.2995 13.4501 12.4745 13.2251 12.6245 13.0501C12.7745 12.8751 12.837 12.7376 12.937 12.5376C13.037 12.3251 12.987 12.1501 12.912 12.0001C12.837 11.8501 12.212 10.3251 11.962 9.70007C11.712 9.10007 11.4495 9.17507 11.262 9.16257H10.662C10.4495 9.16257 10.1245 9.23757 9.83701 9.55007C9.56201 9.86257 8.76201 10.6126 8.76201 12.1376C8.76201 13.6626 9.87451 15.1376 10.0245 15.3376C10.1745 15.5501 12.212 18.6751 15.312 20.0126C16.0495 20.3376 16.6245 20.5251 17.0745 20.6626C17.812 20.9001 18.487 20.8626 19.0245 20.7876C19.6245 20.7001 20.862 20.0376 21.112 19.3126C21.3745 18.5876 21.3745 17.9751 21.287 17.8376C21.1995 17.7001 21.012 17.6376 20.6995 17.4876Z"
          fill="#0094E5"
        />
      </svg>
    );
  }
);

export const WaterMarkIcon = forwardRef<SVGSVGElement, IconProps>(
  function WaterMakeIconBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="108"
        height="374"
        viewBox="0 0 108 374"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={configCSS(css)()}
        ref={forwardedRef}
        {...props}
      >
        <g opacity="0.2" clipPath="url(#clip0_511_1318)">
          <path
            d="M90.9106 144.357C88.2894 139.004 85.3384 133.819 82.0746 128.833C78.4481 123.006 74.3876 117.461 69.9277 112.245C55.0285 94.4068 36.3897 80.0629 15.3312 70.2286C-5.72725 60.3943 -28.6903 55.3101 -51.9319 55.3362C-139.796 55.3362 -210.999 126.539 -210.999 214.417C-210.999 302.294 -139.796 373.484 -51.9319 373.484C-25.1952 373.509 1.11444 366.778 24.5537 353.915C47.993 341.052 67.8018 322.474 82.1407 299.908C84.3018 296.604 86.3109 293.16 88.1812 289.711L88.3199 289.572C100.228 267.304 106.672 242.524 107.123 217.277C107.573 192.029 102.017 167.035 90.9106 144.357ZM-56.1814 304.382C-69.7477 304.381 -83.1119 301.095 -95.1312 294.803C-107.15 288.511 -117.467 279.402 -125.198 268.255C-132.93 257.107 -137.846 244.253 -139.527 230.791C-141.208 217.329 -139.603 203.66 -134.85 190.954C-130.096 178.248 -122.336 166.882 -112.233 157.828C-102.13 148.774 -89.9837 142.303 -76.834 138.966C-63.6844 135.63 -49.9223 135.528 -36.7247 138.67C-23.5272 141.811 -11.2869 148.103 -1.0508 157.006C-15.8835 174.359 -23.7432 196.603 -23.1058 219.423C-22.4684 242.243 -13.3792 264.013 2.399 280.511C-13.2487 295.832 -34.2822 304.403 -56.1814 304.382Z"
            fill="currentColor"
          />
          <path
            d="M79.671 55.3421C94.9533 55.3421 107.342 42.9533 107.342 27.671C107.342 12.3887 94.9533 0 79.671 0C64.3887 0 52 12.3887 52 27.671C52 42.9533 64.3887 55.3421 79.671 55.3421Z"
            fill="currentColor"
          />
        </g>
        <defs>
          <clipPath id="clip0_511_1318">
            <rect
              width="318.147"
              height="373.483"
              fill="currentColor"
              transform="translate(-211)"
            />
          </clipPath>
        </defs>
      </svg>
    );
  }
);

export const Hamburger = forwardRef<SVGSVGElement, IconProps>(
  function HamburgerBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={configCSS(css)()}
        ref={forwardedRef}
        {...props}
      >
        <path
          d="M4.125 18.375H19.875M4.125 12.375H19.875M4.125 6.375H19.875"
          stroke="black"
          strokeWidth="1.40625"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  }
);

export const WashingMachine = forwardRef<SVGSVGElement, IconProps>(
  function WashingMachineBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="41"
        height="40"
        viewBox="0 0 41 40"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={configCSS(css)()}
        ref={forwardedRef}
        {...props}
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M18.9999 28.3871C19.0124 28.4016 19.0301 28.4066 19.0348 28.4328C19.0397 28.4589 19.0627 28.4691 19.0691 28.479L20.1075 29.9409C20.5725 30.4152 20.5321 30.1597 20.5321 30.9677C20.5321 31.4155 20.4515 31.4461 20.4515 31.8548C20.0253 31.7411 19.1571 30.7526 18.8936 30.4289C18.7669 30.2732 18.6779 30.1942 18.57 30.0179C18.2688 29.5268 18.7353 29.5225 18.9999 28.3871ZM1.49984 23.2259H2.7902V27.0969H1.49984V23.2259ZM23.1934 27.0969C23.2353 27.5994 23.5556 27.8131 23.5966 28.3065C23.9718 28.298 24.2932 28.1064 24.5665 27.9861L27.3881 26.7753C28.0072 26.5011 28.8638 26.3107 29.4849 26.6924C30.152 27.1027 30.1053 27.6618 30.3222 28.5164C30.6922 29.9734 30.9705 31.433 31.3231 32.8382C31.4136 33.1992 31.4861 33.5718 31.565 33.8866C31.7553 34.6454 32.0722 35.4132 31.3165 35.7844C30.7094 36.0827 30.1036 36.2935 29.6074 35.8441C28.9183 35.2199 28.9457 31.0954 28.5966 29.5967C28.2366 29.5967 28.106 29.6482 27.7814 29.6685C27.1246 29.7096 27.22 29.6669 27.5136 31.8088L27.8709 35.1613C27.6923 35.2809 26.5753 36.0683 26.401 36.0815C26.2599 36.0922 26.016 35.9671 26.016 35.7258V28.3871H24.7256V34.4356C23.4079 33.8032 22.1522 34.3421 21.5806 34.3548C21.6782 34.1514 21.9684 30.0076 21.9829 29.4347C21.9912 29.1131 22.0348 28.6191 22.0733 28.2349C22.2172 26.8031 23.5035 25.9868 24.0806 26.7742C23.6841 26.8666 23.5267 27.0191 23.1934 27.0969ZM4.08055 25.1614C4.08055 23.6606 4.80707 22.0529 5.79271 21.0672C8.04454 18.8153 11.7293 18.8153 13.9811 21.0672C15.6147 22.7007 16.1982 25.3773 15.1572 27.5283C13.7036 30.5318 10.2989 31.7764 7.51989 30.4316C5.49254 29.4504 4.08055 27.5311 4.08055 25.1614ZM20.6934 28.4677C20.1262 28.0522 19.5644 26.2189 19.5644 25.1614C19.5644 24.3795 19.8316 23.3502 20.1005 22.7943C20.421 22.1325 20.7909 21.5529 21.2767 21.0672C22.9103 19.4336 25.5868 18.85 27.7378 19.8911C30.1938 21.0798 31.6346 23.6349 31.016 26.2904C30.5839 26.0009 29.7114 24.4024 26.8797 25.5412C26.6702 25.6253 25.5337 26.129 25.4515 26.129C25.0615 26.129 24.9202 25.1614 23.274 25.1614C22.1377 25.1614 21.3258 26.2603 20.9679 27.2099C20.798 27.6606 20.8007 28.0076 20.6934 28.4677ZM18.9999 21.9355C18.6325 20.3584 18.0342 20.9756 18.9296 19.8491C21.259 16.9187 25.1893 16.0255 28.8052 17.5334C32.1594 18.9323 34.3494 22.966 33.6053 26.6216C33.407 27.5953 32.7332 29.6329 32.0644 30.0806C31.971 29.6798 31.8906 29.3524 31.7857 28.9035C31.4955 27.6612 32.4676 28.1854 32.4676 24.7581C32.4676 21.384 29.1493 18.0644 25.7741 18.0644C23.9314 18.0644 22.7598 18.3042 21.3047 19.3211C20.1053 20.1593 19.8101 20.7259 19.1346 21.7478C19.0338 21.9002 19.1048 21.8148 18.9999 21.9355ZM3.51603 22.0969C2.77212 21.9235 3.48698 21.9355 2.22568 21.9355C2.55084 20.5397 4.29864 18.7444 5.61585 17.9871C10.2246 15.3375 15.8166 17.3749 17.6531 22.0725C18.8928 25.2435 18.1784 28.6845 15.7941 31.0686C14.7359 32.127 13.2769 33.0009 11.7504 33.3151C10.0418 33.6668 8.83948 33.6153 7.21415 33.0761C5.72278 32.5812 4.38697 31.6326 3.40978 30.4289C3.02026 29.9492 2.37737 29.0383 2.22568 28.3871C3.48698 28.3871 2.77212 28.3991 3.51603 28.2259C3.6189 28.6676 4.19728 29.4318 4.47093 29.7708C4.79035 30.1663 5.36551 30.6732 5.77327 30.9684C7.76261 32.4088 10.6775 32.711 12.9256 31.587C15.1889 30.4556 16.9837 28.0977 16.9837 25.5646C16.9837 23.3237 16.4874 21.7214 14.9072 20.1411C13.7837 19.0176 12.0481 18.0644 10.2901 18.0644C8.4415 18.0644 7.18559 18.3316 5.77327 19.3542C5.00335 19.9116 3.71755 21.2319 3.51603 22.0969ZM17.6289 19.2743C17.4065 19.1252 17.312 18.914 17.0857 18.6884C15.4781 17.0863 14.2997 16.2224 11.8224 15.6452V14.1936H38.9193V37.9839C38.9193 38.3825 38.5921 38.7097 38.1934 38.7097H12.5482C11.7291 38.7097 11.8219 37.9168 11.8224 37.0968C11.8229 36.2903 11.8224 35.4838 11.8224 34.6774C13.1295 34.3729 14.1614 33.9466 15.13 33.3076C16.6293 32.3186 17.3818 31.2139 17.6289 31.0485C17.823 31.1784 18.0357 31.4986 18.2536 31.7141C18.4899 31.9479 18.663 32.124 18.8978 32.36C19.3019 32.7664 19.896 33.1498 20.3708 33.4677C20.2657 33.6867 20.1289 36.1266 20.1289 36.6129C20.5743 36.3772 21.0044 36.1916 21.4654 35.9333C22.4176 35.3997 23.2525 35.3585 24.2772 35.6905C24.8376 35.8721 24.641 35.863 24.8162 36.3611C25.0699 37.0834 25.664 37.4194 26.4998 37.4194C27.269 37.4194 27.8907 36.5972 28.4354 36.4517C28.7454 37.6132 31.0195 37.7024 32.1952 36.8244C34.219 35.3132 32.2562 32.5903 32.4676 31.7742L33.4195 30.5487C35.9953 26.6861 35.5389 21.6599 32.2055 18.3267C31.4232 17.5444 30.5817 16.8773 29.5381 16.3973C26.067 14.8011 21.6983 15.2916 19.0201 17.8428C18.7308 18.1186 18.5698 18.1599 18.308 18.5016C18.1759 18.6739 17.7534 19.183 17.6289 19.2743ZM11.8224 9.75812C11.8224 9.35953 12.1496 9.03222 12.5482 9.03222H38.1934C38.5921 9.03222 38.9193 9.35953 38.9193 9.75812V12.9032H11.8224V9.75812ZM14.4031 7.0969C14.4031 6.77823 14.7693 6.4516 15.1289 6.4516H26.5805C27.5187 6.4516 27.5187 7.74201 26.5805 7.74201H15.1289C14.7693 7.74201 14.4031 7.4154 14.4031 7.0969ZM32.0014 6.22752L33.4539 7.7234L31.1773 7.74201V1.29035H36.3386V7.74201C34.9686 7.74201 35.4663 7.8777 34.1813 6.59271C33.8381 6.24971 33.1881 5.67587 32.9514 5.32256L32.0014 6.22752ZM14.4031 4.43549V2.01604C14.4031 1.61745 14.7303 1.29035 15.1289 1.29035H26.5805C26.9792 1.29035 27.3064 1.61745 27.3064 2.01604V4.43549C27.3064 4.83408 26.9792 5.16138 26.5805 5.16138H15.1289C14.7303 5.16138 14.4031 4.83408 14.4031 4.43549ZM13.1127 1.77428V4.67745C13.1127 5.27019 13.5159 5.60373 13.5159 5.80649C13.5159 6.09525 12.8798 6.39603 13.1933 7.74201C12.218 7.74201 11.9866 7.66442 11.3511 8.07704C10.9648 8.32778 10.532 8.90754 10.532 9.51615V15.4838C8.56921 15.4838 7.82715 15.4955 6.01365 16.2881C5.16957 16.657 4.10066 17.2818 3.45388 17.9219C2.67061 18.6971 2.14442 19.2258 1.5544 20.2159C1.06116 21.0439 0.702207 22.1225 0.545114 22.3516C0.394608 22.5709 0.209473 22.7131 0.209473 23.0645V27.258C0.209473 27.6522 0.500357 27.7768 0.84326 28.6405C1.07637 29.2282 1.21554 29.5361 1.525 30.0555C2.13547 31.0808 2.61063 31.5525 3.41401 32.36C4.02684 32.9762 5.08747 33.6403 5.95757 34.01C7.85079 34.8146 8.54404 34.8387 10.532 34.8387V38.2259C10.532 39.1131 11.4192 40 12.3063 40H38.4353C39.3225 40 40.2095 39.1131 40.2095 38.2259V9.51615C40.2095 8.62891 39.3225 7.74201 38.4353 7.74201H37.6289V1.12897C37.6289 0.625452 37.0034 0 36.4999 0H31.016C30.5124 0 29.8869 0.625452 29.8869 1.12897V7.74201H28.516C28.8295 6.39603 28.1934 6.09525 28.1934 5.80649C28.1934 5.60373 28.5966 5.27019 28.5966 4.67745V1.77428C28.5966 0.887035 27.7096 0 26.8224 0H14.8869C13.9997 0 13.1127 0.887035 13.1127 1.77428Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M17.6289 3.87098H26.016V2.58057H17.6289V3.87098Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M29.8872 11.6129H35.0485V10.3226H29.8872V11.6129Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M31.9644 3.04522L35.2294 6.27049L36.1966 5.34197L32.9314 2.11676L31.9644 3.04522Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M24.7256 11.6129H28.5965V10.3226H24.7256V11.6129Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M14.4028 11.6129H15.6932V10.3226H14.4028V11.6129Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M19.5645 11.6129H20.8548V10.3226H19.5645V11.6129Z"
          fill="currentColor"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M16.9834 11.6129H18.2738V10.3226H16.9834V11.6129Z"
          fill="currentColor"
        />
      </svg>
    );
  }
);

export const Basket = forwardRef<SVGSVGElement, IconProps>(function BasketBare(
  { color = "currentColor", css = {}, ...props },
  forwardedRef
) {
  return (
    <svg
      width="41"
      height="40"
      viewBox="0 0 41 40"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={configCSS(css)()}
      ref={forwardedRef}
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M17.5377 35.2343V34.9218H22.6938C22.6938 35.6377 22.6953 37.2833 22.4872 37.762C21.9451 39.0085 20.6634 38.828 19.4907 38.828C17.3981 38.828 17.5377 36.8598 17.5377 35.2343ZM23.3188 38.828C23.5767 37.8629 23.8592 38.8052 23.863 36.0129C23.8637 35.5296 23.9438 35.4089 23.9438 34.9218H29.1001C29.1001 35.7405 29.0025 36.4035 28.9401 37.1836C28.7607 39.4239 25.6916 38.828 23.3188 38.828ZM11.1313 34.9218H16.2877C16.2877 35.3957 16.3634 35.4899 16.3688 35.9343C16.3737 36.3229 16.353 36.7249 16.3629 37.112C16.3894 38.1419 16.809 38.4399 16.9127 38.828C15.7071 38.828 13.0795 39.009 12.272 38.6248C11.7473 38.3751 11.3455 37.8581 11.2914 37.1836C11.229 36.4035 11.1313 35.7405 11.1313 34.9218ZM29.5688 38.828C30.1574 37.9492 30.2059 37.1636 30.2696 36.0132C30.2954 35.552 30.3501 35.3719 30.3501 34.9218H35.0377C35.0377 35.2803 34.9375 35.6402 34.8944 35.9504C34.7433 37.0384 34.7038 38.0354 33.9434 38.515C33.0494 39.0786 30.9579 38.828 29.5688 38.828ZM5.19375 34.9218H9.88138C9.88138 35.3719 9.9361 35.552 9.96182 36.0132C10.0264 37.1762 10.045 37.9059 10.6625 38.828C6.13065 38.828 5.80187 39.2971 5.3371 35.9504C5.29401 35.6402 5.19375 35.2803 5.19375 34.9218ZM17.3814 29.6092H22.8501L22.772 33.6717H17.4595L17.3814 29.6092ZM29.2564 33.6717H23.9438L24.1001 29.6092H29.647L29.2564 33.6717ZM10.5845 29.6092H16.1314L16.2877 33.6717H10.9751C10.9751 33.3213 10.6312 29.714 10.5845 29.6092ZM35.272 33.6717H30.5064C30.5064 32.2786 30.8189 30.983 30.8189 29.6092H35.897C35.8264 29.7567 35.272 33.3268 35.272 33.6717ZM4.3345 29.6092H9.41252C9.41252 30.983 9.72509 32.2786 9.72509 33.6717H4.95949C4.95949 33.3268 4.40511 29.7567 4.3345 29.6092ZM17.2251 24.5312H23.0064L22.9282 28.3593H17.3032L17.2251 24.5312ZM10.1938 24.5312H15.9751L16.0532 26.4062C16.0531 27.152 16.1314 27.7123 16.1314 28.3593H10.5064C10.4843 27.3661 10.1938 25.7793 10.1938 24.5312ZM36.0532 28.3593H30.9751L31.3053 24.5328L36.6782 24.5312C36.5781 24.7397 36.4259 26.0527 36.3658 26.4062C36.259 27.0335 36.1925 27.7619 36.0532 28.3593ZM3.55322 24.5312H8.94383L9.27408 28.3577L4.17821 28.3593C4.04453 27.7855 3.97622 27.0587 3.87711 26.473C3.81354 26.0973 3.65348 24.7401 3.55322 24.5312ZM1.28755 22.4998C1.28755 20.672 1.00578 19.6874 2.06883 19.6874H38.1626C39.2257 19.6874 38.9439 20.672 38.9439 22.4998C38.9439 23.536 38.1051 23.2811 36.6001 23.2811L28.6293 23.279C27.1673 23.2654 27.5888 24.2156 27.9026 24.4008C28.2587 24.6109 29.512 24.5312 30.0377 24.5312C30.0377 25.7016 29.7485 27.3052 29.7251 28.3593H24.1001L24.1757 25.4662C24.1877 25.0642 24.2563 24.9882 24.2563 24.5312C25.6194 24.5312 26.4439 24.7402 26.4439 23.7499C26.4439 23.1988 25.5158 23.279 25.2726 23.2806C17.6171 23.3315 9.87876 23.231 2.22168 23.2844C1.54247 23.2891 1.28755 23.1633 1.28755 22.4998ZM10.3501 7.81253V7.34372C10.3501 6.57178 11.0625 5.8593 11.8345 5.8593H17.6158C17.7501 5.8593 19.1978 7.11556 19.4308 7.32556C20.1208 7.94757 20.1606 7.86162 20.8081 7.33292C21.0502 7.13502 22.4415 5.8593 22.6157 5.8593H28.397C29.1689 5.8593 29.8814 6.57178 29.8814 7.34372C29.8814 7.9235 29.9164 8.21403 29.397 8.73422C28.2294 9.90342 25.9752 8.48757 25.9752 9.8437C25.9752 10.3187 26.2894 10.4533 26.7535 10.4716C28.6106 10.5451 32.1418 10.1532 33.6065 10.8843C35.7079 11.933 36.4654 14.7155 35.072 16.7529C34.1082 18.1619 32.6798 18.5156 30.9751 18.5156H6.60001C4.13906 18.5156 3.97065 16.3667 5.13592 15.4108C5.76516 14.8945 8.08883 15.0728 9.33782 15.0813C9.90465 15.0852 10.2719 15.0029 10.2719 14.4531C10.2719 13.7604 9.56323 13.8262 8.86584 13.828C8.18876 13.8298 7.51151 13.828 6.83443 13.8282C5.90146 13.8283 5.12904 13.8988 4.64855 12.9672C4.31746 12.3253 4.36825 11.7118 4.76634 11.1348C5.43753 10.1619 7.08771 10.4686 8.31884 10.4686C13.0584 10.4686 17.798 10.4686 22.5377 10.4686C23.0036 10.4686 23.4839 10.481 23.9477 10.4726C24.4538 10.4636 24.8032 10.3482 24.8032 9.8437C24.8032 9.10793 24.1206 9.21777 23.3971 9.21875H13.0845C12.3628 9.21875 11.7377 9.30125 11.2316 9.04017C10.884 8.86077 10.3501 8.28558 10.3501 7.81253ZM24.0219 4.60934C24.2568 4.25857 27.9262 1.17182 27.9283 1.17182C30.1255 1.17182 30.4072 3.45115 29.182 4.30052C28.7713 4.58517 28.4007 4.61232 27.694 4.60954C26.4704 4.60479 25.2458 4.60934 24.0219 4.60934ZM10.3501 3.20312C10.3501 2.58242 10.3453 2.05306 10.9161 1.58148C11.2123 1.33677 11.7069 1.17182 12.225 1.17182C12.4085 1.17182 13.0682 1.82101 13.2407 1.9531L15.7525 4.12897C15.9366 4.27514 16.0837 4.4216 16.2095 4.60934C15.0117 4.60934 13.8135 4.60656 12.6156 4.60934C11.9241 4.61098 11.5383 4.61573 11.096 4.33223C10.7927 4.13777 10.3501 3.64016 10.3501 3.20312ZM14.2563 1.17182H25.9752L22.0023 4.69905C21.826 4.84015 21.7934 4.84589 21.6193 5.01907L20.486 5.99511C20.3266 6.15028 20.2938 6.20888 20.1157 6.32804L14.9791 1.85534C14.6889 1.5792 14.4838 1.51163 14.2563 1.17182ZM9.10012 2.89065C9.10012 4.51539 10.0714 4.85394 10.1938 5.31242C9.92136 5.38526 9.92872 5.4443 9.7667 5.66659C8.9294 6.8155 8.84488 8.02107 9.64696 9.21875C7.57066 9.21875 5.04615 8.77666 3.90758 10.2762C2.43383 12.217 3.7585 14.2212 4.3345 14.375C4.26258 14.6438 2.27296 16.2538 3.7875 18.5156C3.08404 18.5156 1.74183 18.3998 1.21465 18.5989C0.676818 18.8017 0.115723 19.4211 0.115723 20.1562V22.8906C0.115723 23.4483 0.487121 23.9087 0.815586 24.1437C1.20335 24.4213 1.69874 24.5312 2.38123 24.5312C2.38123 25.0607 3.19544 30.0699 3.3414 31.071L4.36629 37.6243C4.6615 38.9686 5.74551 40 7.06887 40H33.1626C34.5593 40 35.5791 38.8802 35.8512 37.6884C36.0113 36.9872 36.0821 36.2212 36.198 35.5355C36.6782 32.6973 37.0565 29.6248 37.5377 26.7968C37.5993 26.4347 37.6415 26.0913 37.7052 25.7145C37.7624 25.3771 37.8502 24.9309 37.8502 24.5312C39.0219 24.5312 40.1157 24.0154 40.1157 22.8906V20.1562C40.1157 19.4131 39.4883 18.5329 38.4788 18.5118C37.3712 18.4887 36.2277 18.5156 35.1157 18.5156C35.2893 18.2563 36.9908 16.957 36.9908 14.7656C36.9908 12.8347 36.4453 11.5516 35.0939 10.4125C33.7166 9.25148 32.336 9.21875 30.5845 9.21875C31.1997 8.30015 31.3464 7.18004 30.805 6.18565C30.6379 5.87874 30.3763 5.40294 30.0377 5.31242C30.164 4.83937 31.1313 4.52848 31.1313 2.89065C31.1313 2.04194 30.7542 1.32143 30.3335 0.876037C29.941 0.460603 29.1818 0 28.397 0H11.8345C10.3953 0 9.10012 1.31583 9.10012 2.89065Z"
        fill={color}
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M11.4438 14.4531C11.4438 14.8311 11.6911 15.0781 12.0688 15.0781H31.3659C32.1781 15.0781 32.3786 13.8282 31.2096 13.8282H12.147C11.7692 13.8282 11.4438 14.05 11.4438 14.4531Z"
        fill={color}
      />
    </svg>
  );
});

export const Iron = forwardRef<SVGSVGElement, IconProps>(function IronBare(
  { color = "currentColor", css = {}, ...props },
  forwardedRef
) {
  return (
    <svg
      width="41"
      height="40"
      viewBox="0 0 41 40"
      fill={color}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
      ref={forwardedRef}
      className={configCSS(css)()}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.56889 26.6407C8.56889 26.1663 8.99221 25.9016 9.39018 26.1244C9.6016 26.2427 10.085 26.7672 10.2095 26.9532C9.62517 27.3445 9.62712 27.4707 9.35009 27.6563C9.16239 27.3759 8.56889 26.9687 8.56889 26.6407ZM0.209473 39.4635V39.0865C0.301437 38.1648 1.0072 36.815 2.19439 36.36C2.66239 36.1804 2.68171 36.2835 2.91948 35.835L5.24247 32.2205C5.59265 31.7334 5.89963 31.3641 6.27911 30.9133L8.49067 28.4376C7.92138 28.0564 7.22183 27.271 7.37041 26.3851C7.45125 25.9036 7.63517 25.5577 7.92203 25.2907C8.1647 25.065 8.60063 24.8437 9.03754 24.8437C10.2126 24.8437 10.4044 25.5965 11.147 26.0938L14.5992 23.7647C15.844 23.0153 17.0639 22.4053 18.3855 21.7699C19.7312 21.1228 21.1392 20.6871 22.5303 20.1333C23.4535 19.7659 26.3093 18.9063 27.0845 18.9063C27.7041 18.9063 27.9604 19.892 26.9786 20.1285L24.0272 20.927C22.7677 21.3495 21.5545 21.7213 20.3437 22.2437C20.0335 22.3776 19.79 22.4907 19.4729 22.6228C17.4748 23.4545 15.6099 24.5249 13.8187 25.7188C13.2838 26.0753 12.8784 26.3778 12.3635 26.7634C11.6572 27.2926 10.9231 27.8318 10.3075 28.4576C10.0614 28.7079 9.89009 28.7925 9.64185 29.0419L8.11905 30.6439C8.00712 30.7706 7.92121 30.8325 7.80617 30.9562C6.38711 32.4813 5.17096 34.2472 4.19388 36.0939C4.97509 36.0939 5.7563 36.0939 6.53767 36.0939C7.34358 36.0939 8.25634 35.9072 8.25634 36.7188C8.25634 38.0337 3.77218 36.8357 2.47585 37.579C2.08345 37.8039 1.58403 38.2697 1.53756 38.8282H34.8189C35.5787 38.83 36.3033 38.8716 36.3033 38.125C36.3033 37.4191 35.9767 37.3361 35.2107 37.3426C31.0003 37.3793 10.2103 37.4357 9.75362 37.2527C9.3334 37.0844 9.21362 36.5196 9.62402 36.212C9.93935 35.9757 10.7449 36.0939 11.225 36.0939H35.0533C35.1123 35.3843 36.0146 34.3962 36.5024 34.0271C37.7029 33.119 38.1921 33.5308 39.0377 33.1251C38.8487 32.3137 38.5685 31.4589 38.3515 30.6863L35.5905 21.2596C34.8949 19.0134 35.096 18.8175 31.8939 19.2627C30.9702 19.3912 30.1047 19.6094 29.1939 19.6094C28.7764 19.6094 28.6295 19.1216 28.7246 18.8325C28.8553 18.4349 29.1414 18.4287 29.5835 18.3583C30.7951 18.1657 31.9553 17.9486 33.1781 17.8905C33.517 17.8745 34.0579 17.875 34.2974 17.6816C34.7803 17.2921 35.0307 16.6406 35.9127 16.6406L36.6939 16.7188C36.7822 16.3879 37.1918 16.0579 37.4082 15.7924C37.5324 15.64 37.6243 15.5221 37.7536 15.3567C38.1082 14.9024 38.5135 14.5581 38.7503 14.0097C39.548 12.1622 38.3924 10.0809 36.3002 9.92492C34.6483 9.80183 32.4666 9.92198 30.7563 9.92198C29.618 9.92198 29.0993 9.95733 28.2054 9.6604C26.225 9.00271 24.8189 7.17251 24.8189 4.84376C24.8189 2.36932 26.9958 0 29.5064 0H39.7408C40.3052 0 40.3265 0.833951 39.9614 1.08013C39.7639 1.21321 39.8277 1.17248 39.513 1.17854L31.5377 1.17195C29.6472 1.17195 28.8311 1.08767 27.6452 1.88891C25.9054 3.06417 25.6253 5.43369 26.7549 7.12653C28.1437 9.20747 30.7468 8.75015 33.2564 8.75015C35.032 8.75015 36.7988 8.52047 38.1532 9.24396C39.1429 9.77267 40.2095 11.0934 40.2095 12.5782C40.2095 14.5262 39.4644 15.1224 38.3677 16.5177C38.1178 16.8356 37.8783 17.2042 37.5533 17.4219C38.4054 19.0322 36.8983 19.9688 36.6158 20.3906C36.9893 21.9936 37.5356 23.5329 37.9891 25.1112L39.3409 29.7749C39.4973 30.3114 39.6603 30.8403 39.802 31.3451C39.8853 31.6417 39.9344 31.8359 40.0254 32.1374C40.2569 32.9048 40.3648 33.8237 39.4842 34.2748C39.0175 34.5138 38.6063 34.4206 38.0539 34.5632C37.315 34.7537 36.4705 35.5321 36.3033 36.25C36.9762 36.4068 37.5533 37.1927 37.5533 38.047C37.5533 38.9955 36.7706 40 35.7564 40H0.67814C0.401593 40 0.248746 39.7876 0.209473 39.4635ZM35.4439 18.2812C36.1488 17.2285 37.2435 18.3282 36.147 19.0625C35.7042 18.4012 35.6173 18.5179 35.4439 18.2812Z"
        fill="#F7FDFF"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M22.7094 31.3281V29.9219H27.9438V30.9376C27.4838 31.0448 24.8867 31.1433 24.0262 31.2386L22.7094 31.3281ZM21.5376 29.9219V31.4064C20.7902 31.4064 20.1964 31.2427 19.7192 30.8027C18.794 29.9499 18.6247 28.1732 20.3615 27.1833C23.2081 25.5608 26.3425 24.4039 29.5224 23.5317C30.8796 23.1594 31.7826 22.7615 32.0385 23.6398L32.7158 26.3999C32.8387 26.9952 33.0198 27.6485 33.1625 28.2189C33.796 30.7526 33.9223 30.5842 31.6153 30.7028C30.834 30.7431 30.0549 30.8595 29.1938 30.8595C29.1938 30.2604 29.2866 28.7501 28.1001 28.7501H22.5531C22.2833 28.7501 21.9717 28.9743 21.8352 29.1259C21.6628 29.3176 21.5376 29.5745 21.5376 29.9219ZM17.8657 28.9062C17.8657 29.9823 17.9148 30.568 18.7462 31.5414C18.8979 31.7192 19.3177 32.0253 19.5366 32.1572C20.8613 32.9555 22.7053 32.4351 24.4302 32.424L31.012 31.9745C31.8835 31.8557 32.8793 31.973 33.5815 31.7314C34.0727 31.5625 34.4811 31.1575 34.6547 30.6953C35.0154 29.7346 34.6068 28.9897 34.2877 27.7187C34.0879 26.9227 33.9176 26.1601 33.7251 25.3906C33.3424 23.8605 33.2396 21.8751 31.4594 21.8751C30.8808 21.8751 29.8437 22.2007 29.3344 22.328C26.8638 22.9456 22.3037 24.5934 20.0683 25.9527C19.7955 26.1185 19.5101 26.2319 19.2696 26.404C18.5535 26.9168 17.8657 27.9432 17.8657 28.9062Z"
        fill="#F7FDFF"
      />
    </svg>
  );
});

export const Quotes = forwardRef<SVGSVGElement, IconProps>(function QuotesBare(
  { color = "currentColor", css = {}, ...props },
  forwardedRef
) {
  return (
    <svg
      width="19"
      height="16"
      viewBox="0 0 19 16"
      xmlns="http://www.w3.org/2000/svg"
      fill={color}
      {...props}
      ref={forwardedRef}
      className={configCSS(css)()}
    >
      <rect width="19" height="15.4695" fill="white" />
      <path
        opacity="0.5"
        d="M7.73475 0V1.28415C5.70401 2.51852 4.32031 3.66331 3.58367 4.7185C3.04612 5.49496 2.77734 6.41079 2.77734 7.46598C2.77734 8.10307 2.8968 8.57094 3.13571 8.86958C3.35471 9.16822 3.61353 9.31754 3.91217 9.31754C4.11127 9.31754 4.39 9.24786 4.74836 9.10849C5.28591 8.92931 5.72392 8.83972 6.06237 8.83972C6.85874 8.83972 7.56552 9.13836 8.18271 9.73563C8.7999 10.3329 9.10849 11.0795 9.10849 11.9754C9.10849 12.9908 8.7999 13.7772 8.18271 14.3347C7.32661 15.0912 6.33115 15.4695 5.19632 15.4695C3.84249 15.4695 2.63798 14.9021 1.58279 13.7673C0.527596 12.6324 0 11.2288 0 9.55645C0 7.20716 0.876008 5.06691 2.62802 3.13571C3.80267 1.86152 5.50491 0.81628 7.73475 0Z"
        fill="#1A202C"
      />
      <path
        opacity="0.5"
        d="M17.6264 0V1.28415C15.5956 2.51852 14.2119 3.66331 13.4753 4.7185C12.9377 5.49496 12.6689 6.41079 12.6689 7.46598C12.6689 8.10307 12.7884 8.57094 13.0273 8.86958C13.2463 9.16822 13.5051 9.31754 13.8038 9.31754C14.0029 9.31754 14.2816 9.24786 14.64 9.10849C15.1775 8.92931 15.6155 8.83972 15.954 8.83972C16.7503 8.83972 17.4571 9.13836 18.0743 9.73563C18.6915 10.3329 19.0001 11.0795 19.0001 11.9754C19.0001 12.9908 18.6915 13.7772 18.0743 14.3347C17.2182 15.0912 16.2228 15.4695 15.0879 15.4695C13.7341 15.4695 12.5296 14.9021 11.4744 13.7673C10.4192 12.6324 9.8916 11.2288 9.8916 9.55645C9.8916 7.20716 10.7676 5.06691 12.5196 3.13571C13.6943 1.86152 15.3965 0.81628 17.6264 0Z"
        fill="#1A202C"
      />
    </svg>
  );
});
export const InstagramIcon = forwardRef<SVGSVGElement, IconProps>(
  function InstagramBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="20"
        height="21"
        viewBox="0 0 20 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...props}
        ref={forwardedRef}
        className={configCSS(css)()}
      >
        <path
          d="M10 0.771729C12.717 0.771729 13.056 0.781728 14.122 0.831728C15.187 0.881728 15.912 1.04873 16.55 1.29673C17.21 1.55073 17.766 1.89473 18.322 2.44973C18.8305 2.94962 19.224 3.55432 19.475 4.22173C19.722 4.85873 19.89 5.58473 19.94 6.64973C19.987 7.71573 20 8.05473 20 10.7717C20 13.4887 19.99 13.8277 19.94 14.8937C19.89 15.9587 19.722 16.6837 19.475 17.3217C19.2247 17.9895 18.8311 18.5943 18.322 19.0937C17.822 19.602 17.2173 19.9955 16.55 20.2467C15.913 20.4937 15.187 20.6617 14.122 20.7117C13.056 20.7587 12.717 20.7717 10 20.7717C7.283 20.7717 6.944 20.7617 5.878 20.7117C4.813 20.6617 4.088 20.4937 3.45 20.2467C2.78233 19.9962 2.17753 19.6027 1.678 19.0937C1.16941 18.5939 0.775931 17.9892 0.525 17.3217C0.277 16.6847 0.11 15.9587 0.0599999 14.8937C0.0129999 13.8277 0 13.4887 0 10.7717C0 8.05473 0.00999994 7.71573 0.0599999 6.64973C0.11 5.58373 0.277 4.85973 0.525 4.22173C0.775236 3.55391 1.1688 2.94905 1.678 2.44973C2.17767 1.94096 2.78243 1.54746 3.45 1.29673C4.088 1.04873 4.812 0.881728 5.878 0.831728C6.944 0.784728 7.283 0.771729 10 0.771729ZM10 5.77173C8.67392 5.77173 7.40215 6.29851 6.46447 7.23619C5.52678 8.17388 5 9.44565 5 10.7717C5 12.0978 5.52678 13.3696 6.46447 14.3073C7.40215 15.2449 8.67392 15.7717 10 15.7717C11.3261 15.7717 12.5979 15.2449 13.5355 14.3073C14.4732 13.3696 15 12.0978 15 10.7717C15 9.44565 14.4732 8.17388 13.5355 7.23619C12.5979 6.29851 11.3261 5.77173 10 5.77173ZM16.5 5.52173C16.5 5.19021 16.3683 4.87227 16.1339 4.63785C15.8995 4.40342 15.5815 4.27173 15.25 4.27173C14.9185 4.27173 14.6005 4.40342 14.3661 4.63785C14.1317 4.87227 14 5.19021 14 5.52173C14 5.85325 14.1317 6.17119 14.3661 6.40561C14.6005 6.64003 14.9185 6.77173 15.25 6.77173C15.5815 6.77173 15.8995 6.64003 16.1339 6.40561C16.3683 6.17119 16.5 5.85325 16.5 5.52173ZM10 7.77173C10.7956 7.77173 11.5587 8.0878 12.1213 8.65041C12.6839 9.21302 13 9.97608 13 10.7717C13 11.5674 12.6839 12.3304 12.1213 12.893C11.5587 13.4557 10.7956 13.7717 10 13.7717C9.20435 13.7717 8.44129 13.4557 7.87868 12.893C7.31607 12.3304 7 11.5674 7 10.7717C7 9.97608 7.31607 9.21302 7.87868 8.65041C8.44129 8.0878 9.20435 7.77173 10 7.77173Z"
          fill="#0094E5"
        />
      </svg>
    );
  }
);
export const TwitterIcon = forwardRef<SVGSVGElement, IconProps>(
  function TwitterBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="22"
        height="18"
        viewBox="0 0 22 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...props}
        ref={forwardedRef}
        className={configCSS(css)()}
      >
        <path
          d="M21.46 2.77173C20.69 3.12173 19.86 3.35173 19 3.46173C19.88 2.93173 20.56 2.09173 20.88 1.08173C20.05 1.58173 19.13 1.93173 18.16 2.13173C17.37 1.27173 16.26 0.771729 15 0.771729C12.65 0.771729 10.73 2.69173 10.73 5.06173C10.73 5.40173 10.77 5.73173 10.84 6.04173C7.28004 5.86173 4.11004 4.15173 2.00004 1.56173C1.63004 2.19173 1.42004 2.93173 1.42004 3.71173C1.42004 5.20173 2.17004 6.52173 3.33004 7.27173C2.62004 7.27173 1.96004 7.07173 1.38004 6.77173V6.80173C1.38004 8.88173 2.86004 10.6217 4.82004 11.0117C4.19077 11.1839 3.53013 11.2079 2.89004 11.0817C3.16165 11.9342 3.69358 12.6801 4.41106 13.2147C5.12854 13.7492 5.99549 14.0454 6.89004 14.0617C5.37367 15.2622 3.49404 15.911 1.56004 15.9017C1.22004 15.9017 0.880039 15.8817 0.540039 15.8417C2.44004 17.0617 4.70004 17.7717 7.12004 17.7717C15 17.7717 19.33 11.2317 19.33 5.56173C19.33 5.37173 19.33 5.19173 19.32 5.00173C20.16 4.40173 20.88 3.64173 21.46 2.77173Z"
          fill="#0094E5"
        />
      </svg>
    );
  }
);
export const FacebookIcon = forwardRef<SVGSVGElement, IconProps>(
  function FacebookBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="11"
        height="21"
        viewBox="0 0 11 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...props}
        ref={forwardedRef}
        className={configCSS(css)()}
      >
        <path
          d="M7 12.2717H9.5L10.5 8.27173H7V6.27173C7 5.24173 7 4.27173 9 4.27173H10.5V0.911729C10.174 0.868729 8.943 0.771729 7.643 0.771729C4.928 0.771729 3 2.42873 3 5.47173V8.27173H0V12.2717H3V20.7717H7V12.2717Z"
          fill="#0094E5"
        />
      </svg>
    );
  }
);
export const TitTokIcon = forwardRef<SVGSVGElement, IconProps>(
  function TitTokBare(
    { color = "currentColor", css = {}, ...props },
    forwardedRef
  ) {
    return (
      <svg
        width="16"
        height="19"
        viewBox="0 0 16 19"
        fill="none"
        {...props}
        ref={forwardedRef}
        className={configCSS(css)()}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12.6002 3.59173C11.9166 2.81135 11.5399 1.80916 11.5402 0.771729H8.45016V13.1717C8.42632 13.8428 8.14303 14.4783 7.65992 14.9447C7.17682 15.411 6.5316 15.6716 5.86016 15.6717C4.44016 15.6717 3.26016 14.5117 3.26016 13.0717C3.26016 11.3517 4.92016 10.0617 6.63016 10.5917V7.43173C3.18016 6.97173 0.160156 9.65173 0.160156 13.0717C0.160156 16.4017 2.92016 18.7717 5.85016 18.7717C8.99016 18.7717 11.5402 16.2217 11.5402 13.0717V6.78173C12.7932 7.68158 14.2975 8.16438 15.8402 8.16173V5.07173C15.8402 5.07173 13.9602 5.16173 12.6002 3.59173Z"
          fill="#0094E5"
        />
      </svg>
    );
  }
);
